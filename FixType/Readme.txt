定点数:
	原理: 使用64位(long)进行二进制数据存储;
	// 二进制位用途设定
		1 位 符号位
		40位 整数位
		23位 小数位
		小数位位数由‘FixNum’的常量'BITS'控制,符号位固定为1,整数位取'64-1-BITS'
	// 存储逻辑(CPU提供高于32位的运算环境)
		通过对 value << 'BITS' 得到一个值为 value * 2^'BITS'的整数
			(如果'BITS'较大,那么应当由long来接收)
			下称原始value为o
		此时尽管这个值的二进制转十进制值无任何意义,必须从第'BITS'位分开。
		'BITS'之上负责o的整数部分,以下负责o的小数部分。
			如 100110 => 100.110,得4.75
	// Modf取小数
		(1 << 'BITS') - 1 = 将得到 从右起的'BITS'个1;
		与运算即可得到小数部分的二进制数。

因为是结构体很容易就能兼容'Burst'
	取消两个脚本里的相关注释即可。